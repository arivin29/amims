{"version":3,"sources":["./src/app/pages/users/group/add/add.component.html","./src/app/pages/users/group/detail/detail.component.html","./src/app/pages/users/group/edit/edit.component.html","./src/app/pages/users/group/list/list.component.html","./src/app/pages/users/group/add/add.component.scss","./src/app/pages/users/group/add/add.component.ts","./src/app/pages/users/group/detail/detail.component.scss","./src/app/pages/users/group/detail/detail.component.ts","./src/app/pages/users/group/edit/edit.component.scss","./src/app/pages/users/group/edit/edit.component.ts","./src/app/pages/users/group/group-routing.module.ts","./src/app/pages/users/group/group.module.ts","./src/app/pages/users/group/list/list.component.scss","./src/app/pages/users/group/list/list.component.ts"],"names":[],"mappings":"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","file":"group-group-module.js","sourcesContent":["module.exports = \"<div>\\r\\n    <div class=\\\"air__utils__heading card-header-flex\\\">\\r\\n        <div class=\\\"d-flex flex-column justify-content-center mr-auto\\\">\\r\\n            <h5 class=\\\"mb-0\\\">New Group</h5>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card\\\" style=\\\"width: 50%\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <form nz-form [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"simpan()\\\" id=\\\"ngForm\\\">\\r\\n                <div nz-row nzGutter=\\\"8\\\">\\r\\n                    <nz-form-item>\\r\\n                        <nz-form-label>Name</nz-form-label>\\r\\n                        <nz-form-control>\\r\\n                            <input nz-input formControlName=\\\"name\\\" />\\r\\n                        </nz-form-control>\\r\\n                    </nz-form-item>\\r\\n                </div>\\r\\n                <div nz-row nzGutter=\\\"8\\\">\\r\\n                    <nz-form-item>\\r\\n                        <nz-form-label>Status</nz-form-label>\\r\\n                        <nz-form-control>\\r\\n                            <nz-radio-group formControlName=\\\"status_group\\\">\\r\\n                                <label nz-radio nzValue=\\\"Active\\\">Active</label>\\r\\n                                <label nz-radio nzValue=\\\"Inactive\\\">Inactive</label>\\r\\n                            </nz-radio-group>\\r\\n                        </nz-form-control>\\r\\n                    </nz-form-item>\\r\\n                </div>\\r\\n                <div nz-row nzGutter=\\\"8\\\">\\r\\n                    <nz-form-item>\\r\\n                        <nz-form-label>Description</nz-form-label>\\r\\n                        <nz-form-control>\\r\\n                                <textarea nz-input placeholder=\\\"Description\\\" formControlName=\\\"description\\\"\\r\\n                                [nzAutosize]=\\\"{ minRows: 4, maxRows: 4 }\\\"></textarea>\\r\\n                        </nz-form-control>\\r\\n                    </nz-form-item>\\r\\n                </div>\\r\\n            </form>\\r\\n            <div class=\\\"footer\\\">\\r\\n                <button type=\\\"button\\\" (click)=\\\"goToBack()\\\" class=\\\"ant-btn\\\"\\r\\n                    style=\\\"margin-right: 8px;\\\"><span>Cancel</span></button>\\r\\n                <button type=\\\"submit\\\" class=\\\"ant-btn ant-btn-primary\\\" form=\\\"ngForm\\\"><span>Submit</span></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div>\\r\\n    <div class=\\\"air__utils__heading card-header-flex\\\">\\r\\n        <div class=\\\"d-flex flex-column justify-content-center mr-auto\\\">\\r\\n            <h5 class=\\\"mb-0\\\">Group Detail</h5>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card\\\" style=\\\"width: 50%\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <table class=\\\"table table-borderless\\\">\\r\\n                <tbody>\\r\\n                    <!-- <tr>\\r\\n                        <td class=\\\"text-gray-6 pl-0\\\">Group name</td>\\r\\n                        <td class=\\\"pr-0 text-left text-dark\\\">: {{dataGroup.name}} </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td class=\\\"text-gray-6 pl-0\\\">Status</td>\\r\\n                        <td class=\\\"pr-0 text-left text-dark\\\">: {{dataGroup.status_group}}</td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                        <td class=\\\"text-gray-6 pl-0\\\">Desc</td>\\r\\n                        <td class=\\\"pr-0 text-left text-dark\\\">: {{dataGroup.description}}</td>\\r\\n                    </tr> -->\\r\\n                </tbody>\\r\\n            </table>\\r\\n            <div class=\\\"footer\\\">\\r\\n                <button type=\\\"button\\\" (click)=\\\"goToBack()\\\" class=\\\"ant-btn\\\"\\r\\n                    style=\\\"margin-right: 8px;\\\"><span>Back</span></button>\\r\\n                <button nz-button (click)=\\\"simpan()\\\" nzType=\\\"primary\\\">Save</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card\\\" style=\\\"width: 50%\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n            <nz-tree #nzTreeComponent [nzData]=\\\"listOfData\\\" nzCheckable [nzCheckedKeys]=\\\"defaultCheckedKeys\\\"\\r\\n                [nzExpandedKeys]=\\\"defaultExpandedKeys\\\" [nzSelectedKeys]=\\\"defaultSelectedKeys\\\"\\r\\n                (nzClick)=\\\"nzClick($event)\\\" (nzCheckBoxChange)=\\\"nzCheck($event)\\\" (nzExpandChange)=\\\"nzCheck($event)\\\">\\r\\n            </nz-tree>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div>\\r\\n        <div class=\\\"air__utils__heading card-header-flex\\\">\\r\\n            <div class=\\\"d-flex flex-column justify-content-center mr-auto\\\">\\r\\n                <h5 class=\\\"mb-0\\\">Edit Group</h5>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"card\\\" style=\\\"width: 50%\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <form nz-form [formGroup]=\\\"dataForm\\\" (ngSubmit)=\\\"simpan()\\\" id=\\\"ngForm\\\">\\r\\n                    <div nz-row nzGutter=\\\"8\\\">\\r\\n                        <nz-form-item>\\r\\n                            <nz-form-label>Name</nz-form-label>\\r\\n                            <nz-form-control>\\r\\n                                <input nz-input formControlName=\\\"name\\\" />\\r\\n                            </nz-form-control>\\r\\n                        </nz-form-item>\\r\\n                    </div>\\r\\n                    <div nz-row nzGutter=\\\"8\\\">\\r\\n                        <nz-form-item>\\r\\n                            <nz-form-label>Status</nz-form-label>\\r\\n                            <nz-form-control>\\r\\n                                <nz-radio-group formControlName=\\\"status_group\\\">\\r\\n                                    <label nz-radio nzValue=\\\"Active\\\">Active</label>\\r\\n                                    <label nz-radio nzValue=\\\"Inactive\\\">Inactive</label>\\r\\n                                </nz-radio-group>\\r\\n                            </nz-form-control>\\r\\n                        </nz-form-item>\\r\\n                    </div>\\r\\n                    <div nz-row nzGutter=\\\"8\\\">\\r\\n                        <nz-form-item>\\r\\n                            <nz-form-label>Description</nz-form-label>\\r\\n                            <nz-form-control>\\r\\n                                    <textarea nz-input placeholder=\\\"Description\\\" formControlName=\\\"description\\\"\\r\\n                                    [nzAutosize]=\\\"{ minRows: 4, maxRows: 4 }\\\"></textarea>\\r\\n                            </nz-form-control>\\r\\n                        </nz-form-item>\\r\\n                    </div>\\r\\n                </form>\\r\\n                <div class=\\\"footer\\\">\\r\\n                    <button type=\\\"button\\\" (click)=\\\"goToBack()\\\" class=\\\"ant-btn\\\"\\r\\n                        style=\\\"margin-right: 8px;\\\"><span>Cancel</span></button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"ant-btn ant-btn-primary\\\" form=\\\"ngForm\\\"><span>Submit</span></button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\"","module.exports = \"<div>\\r\\n        <div class=\\\"air__utils__heading card-header-flex\\\">\\r\\n            <div class=\\\"d-flex flex-column justify-content-center mr-auto\\\">\\r\\n                <h5 class=\\\"mb-0\\\">Group</h5>\\r\\n            </div>\\r\\n            <div class=\\\"d-flex flex-column justify-content-center\\\">\\r\\n                <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['../add']\\\" routerLinkActive=\\\"router-link-active\\\">\\r\\n                    <i nz-icon nzType=\\\"plus\\\" nzTheme=\\\"outline\\\"></i> Add New\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <nav class=\\\"navbar\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"search\\\" [(ngModel)]=\\\"search\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <button nz-button nzType=\\\"primary\\\" (click)=\\\"searchData()\\\">Search</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </nav>\\r\\n                <nz-table #ajaxTable nzShowSizeChanger [nzFrontPagination]=\\\"false\\\" [nzData]=\\\"listOfData\\\"\\r\\n                    [nzLoading]=\\\"loading\\\" [nzTotal]=\\\"total\\\" [(nzPageIndex)]=\\\"pageIndex\\\" [(nzPageSize)]=\\\"pageSize\\\"\\r\\n                    (nzPageIndexChange)=\\\"searchData()\\\" (nzPageSizeChange)=\\\"searchData(true)\\\">\\r\\n                    <thead (nzSortChange)=\\\"sort($event)\\\" nzSingleSort>\\r\\n                        <tr>\\r\\n                            <th nzShowSort nzSortKey=\\\"name\\\">Name</th>\\r\\n                            <th nzShowSort nzSortKey=\\\"description\\\">Description</th>\\r\\n                            <th nzShowSort nzSortKey=\\\"status_group\\\">Status</th>\\r\\n                            <th class=\\\"text-right\\\">Action</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let data of ajaxTable.data\\\">\\r\\n                            <td>{{ data.name }}</td>\\r\\n                            <td>{{ data.description }}</td>\\r\\n                            <td>{{ data.status_group}}</td>\\r\\n                            <td class=\\\"text-right\\\">\\r\\n                                <a nz-dropdown [nzDropdownMenu]=\\\"menu\\\" nzPlacement=\\\"bottomRight\\\">\\r\\n                                    <i nz-icon nzType=\\\"more\\\" nzTheme=\\\"outline\\\"></i>\\r\\n                                </a>\\r\\n                                <nz-dropdown-menu #menu=\\\"nzDropdownMenu\\\">\\r\\n                                    <ul nz-menu nzSelectable>\\r\\n                                        <li nz-menu-item\\r\\n                                        [routerLink]=\\\"['../edit',data.id_group]\\\">\\r\\n                                        <i nz-icon nzType=\\\"edit\\\" nzTheme=\\\"outline\\\"></i>Edit\\r\\n                                        </li>\\r\\n                                        <li nz-menu-item\\r\\n                                        [routerLink]=\\\"['../detail',data.id_group]\\\">\\r\\n                                        <i nz-icon nzType=\\\"search\\\" nzTheme=\\\"outline\\\"></i>View\\r\\n                                        </li>\\r\\n                                        <li nz-menu-divider></li>\\r\\n                                        <li nz-menu-item>\\r\\n                                            <a nz-popconfirm nzPopconfirmTitle=\\\"Are you sure delete this ?\\\"\\r\\n                                                nzPopconfirmPlacement=\\\"bottom\\\"\\r\\n                                                (nzOnConfirm)=\\\"delete(data.id_group)\\\"\\r\\n                                                (nzOnCancel)=\\\"batalDelete()\\\"><i nz-icon nzType=\\\"delete\\\" nzTheme=\\\"outline\\\"></i>Delete</a>\\r\\n                                        </li>\\r\\n                                    </ul>\\r\\n                                </nz-dropdown-menu>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </nz-table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXJzL2dyb3VwL2FkZC9hZGQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Group } from 'src/app/sdk/user/models/group';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { UserGroupService } from 'src/app/sdk/user/services';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FormBuilderTypeSafe, FormGroupTypeSafe } from 'src/app/services/angular-reactive-forms-helper';\r\nimport { PesanService } from 'src/app/services/tool/pesan.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-add',\r\n    templateUrl: './add.component.html',\r\n    styleUrls: ['./add.component.scss']\r\n})\r\nexport class AddComponent implements OnInit {\r\n\r\n    constructor(\r\n\r\n        private userGroupService: UserGroupService,\r\n        private spinner: NgxSpinnerService,\r\n        private fb: FormBuilderTypeSafe,\r\n        private pesan: PesanService,\r\n        private router: Router\r\n\r\n    ) { }\r\n\r\n    dataGroup: Group = {}\r\n\r\n    ngOnInit() {\r\n        this.form()\r\n    }\r\n\r\n\r\n    dataForm: FormGroupTypeSafe<Group>\r\n    form() {\r\n        this.dataForm = this.fb.group<Group>({\r\n            name: new FormControl('', [Validators.required]),\r\n            status_group: new FormControl('', [Validators.required]),\r\n            description: new FormControl(''),\r\n        })\r\n    }\r\n\r\n    simpan() {\r\n        this.spinner.show()\r\n        if (this.dataForm.invalid) {\r\n            this.pesan.pesanWarningForm('Form Tidak Valid')\r\n            this.spinner.hide()\r\n            return\r\n        }\r\n\r\n        this.dataGroup = this.dataForm.value\r\n        this.userGroupService\r\n            .postUserGroups(this.dataGroup)\r\n            .subscribe(\r\n                data => {\r\n\r\n                    this.goToBack()\r\n                    this.spinner.hide()\r\n                },\r\n                err => {\r\n                    this.pesan.pesanWarningForm('Gagal di simpan')\r\n                    this.spinner.hide()\r\n                },\r\n                () => {\r\n                    console.log('HTTP request completed.')\r\n                },\r\n            )\r\n    }\r\n\r\n\r\n\r\n    goToBack() {\r\n\r\n        this.router.navigate(['users/group/list'])\r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXJzL2dyb3VwL2RldGFpbC9kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Group } from 'src/app/sdk/user/models/group';\r\nimport { UserGroupService, UserModuleService, UserModuleDetailService, UserGroupDetailService } from 'src/app/sdk/user/services';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { NzFormatEmitEvent, NzTreeComponent, NzTreeNodeOptions } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    selector: 'app-detail',\r\n    templateUrl: './detail.component.html',\r\n    styleUrls: ['./detail.component.scss']\r\n})\r\nexport class DetailComponent implements OnInit {\r\n\r\n    constructor(\r\n        private routerActive: ActivatedRoute,\r\n        private userGroupService: UserGroupService,\r\n        private spinner: NgxSpinnerService,\r\n        private router: Router,\r\n        private userModuleService: UserModuleService,\r\n        private userGroupDetailService: UserGroupDetailService,\r\n    ) { }\r\n\r\n    @ViewChild('nzTreeComponent', { static: false }) nzTreeComponent: NzTreeComponent;\r\n\r\n    dataGroup = {};\r\n\r\n    id_group: string = ''\r\n\r\n    ngOnInit() {\r\n        this.id_group = this.routerActive.snapshot.paramMap.get('id_group')\r\n\r\n        this.searchData();\r\n    }\r\n    getData() {\r\n        this.spinner.show()\r\n        this.userGroupDetailService.getUserGroupDetails(JSON.stringify({ id_group: this.id_group, access: 'full' })).subscribe(\r\n            response => {\r\n\r\n                let a = []\r\n                response.data.forEach(element => {\r\n                    a.push(element.id_module_detail);\r\n                });\r\n                this.defaultCheckedKeys = a;\r\n                console.log(this.defaultCheckedKeys)\r\n\r\n                this.spinner.hide()\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n\r\n    goToBack() {\r\n\r\n        this.router.navigate(['/users/group/list'])\r\n    }\r\n\r\n    listOfData: NzTreeNodeOptions[] = [];\r\n    searchData(reset: boolean = false): void {\r\n        this.spinner.show()\r\n        this.userModuleService\r\n            .getUserModules()\r\n            .subscribe((datas: any) => {\r\n\r\n                function unflatten(arr) {\r\n                    var tree = [],\r\n                        mappedArr = {},\r\n                        arrElem,\r\n                        mappedElem;\r\n\r\n                    // First map the nodes of the array to an object -> create a hash table.\r\n                    for (var i = 0, len = arr.length; i < len; i++) {\r\n                        arrElem = arr[i];\r\n                        mappedArr[arrElem.key] = arrElem;\r\n                        // mappedArr[arrElem.key]['children'] = [];\r\n                    }\r\n\r\n\r\n                    for (var key in mappedArr) {\r\n\r\n                        if (mappedArr.hasOwnProperty(key)) {\r\n                            mappedElem = mappedArr[key];\r\n\r\n                            // If the element is not at the root level, add it to its parent array of children.\r\n                            if (mappedElem.parent) {\r\n\r\n                                if (!mappedArr[mappedElem['parent']].hasOwnProperty('children')) {\r\n                                    mappedArr[mappedElem['parent']]['children'] = []\r\n                                    mappedArr[mappedElem['parent']]['isLeaf'] = false\r\n                                }\r\n\r\n                                if (!mappedElem.hasOwnProperty('children')) {\r\n                                    mappedElem['isLeaf'] = true\r\n                                }\r\n                                mappedArr[mappedElem['parent']]['children'].push(mappedElem);\r\n                            }\r\n                            // If the element is at the root level, add it to first level elements array.\r\n                            else {\r\n                                tree.push(mappedElem);\r\n                            }\r\n                        }\r\n                    }\r\n                    return tree;\r\n                }\r\n\r\n                let listData = datas.data;\r\n                listData.forEach((item, index) => {\r\n                    listData[index] = {\r\n                        title: item.name_module,\r\n                        key: item.id_module,\r\n                        parent: item.id_module_parent,\r\n                        // children: [],\r\n                        expanded: true,\r\n                    }\r\n                });\r\n\r\n                this.listOfData = unflatten(listData);\r\n                this.getData()\r\n                this.spinner.hide()\r\n\r\n            })\r\n    }\r\n\r\n\r\n    defaultCheckedKeys = [];\r\n    defaultSelectedKeys = [];\r\n    defaultExpandedKeys = ['0-0', '0-0-0', '0-0-1'];\r\n\r\n    nzClick(event: NzFormatEmitEvent): void {\r\n        console.log(event);\r\n        // this.defaultCheckedKeys = [\"283af76f-7213-40da-aa54-cae84b2e5dfa\", \"9b1fea21-a86b-41c9-9247-812bd7bccb9b\", \"83fc5cac-d08b-4432-822d-505072d33650\", \"690f7327-fa52-4cd2-b2d8-9c4270d25506\", \"738960a0-1fa5-4d21-9efe-b8196d99e63d\", \"e04c6ed1-acb2-4c10-9e58-8e49058156a2\", \"5deacc26-a183-486e-b89c-d6b9a1a0d1c3\"];\r\n    }\r\n\r\n    yangDicek = [];\r\n    yangIkutDicek = [];\r\n    nzCheck(event: NzFormatEmitEvent): void {\r\n        this.yangDicek = [];\r\n        this.yangIkutDicek = [];\r\n\r\n        let datas = this.nzTreeComponent.getTreeNodes()\r\n\r\n        let prosesIkutDicek = (data) => {\r\n\r\n            //yg ikut di cek\r\n            data.service.halfCheckedNodeList.forEach(element => {\r\n                this.yangIkutDicek.push(element.key)\r\n            });\r\n\r\n            data.service.checkedNodeList.forEach(element => {\r\n                this.yangDicek.push(element.key)\r\n            });\r\n        }\r\n\r\n\r\n\r\n        if (datas.length > 0) {\r\n            prosesIkutDicek(datas[0]);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    // nzSelectedKeys change\r\n    nzSelect(keys: string[]): void {\r\n        console.log(keys);\r\n        console.log(this.nzTreeComponent.getSelectedNodeList());\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        // get node by key: '10011'\r\n        console.log(this.nzTreeComponent.getTreeNodeByKey('10011'));\r\n        // use tree methods\r\n        console.log(\r\n            this.nzTreeComponent.getTreeNodes(),\r\n            this.nzTreeComponent.getCheckedNodeList(),\r\n            this.nzTreeComponent.getSelectedNodeList(),\r\n            this.nzTreeComponent.getExpandedNodeList()\r\n        );\r\n    }\r\n\r\n    //--------------------------- update ke server ---------------------------\r\n\r\n    simpan() {\r\n        this.spinner.show()\r\n        let param: any = { yangDicek: this.yangDicek, yangIkutDicek: this.yangIkutDicek, id_group: this.id_group }\r\n        this.userGroupDetailService.postUserGroupDetails(param).subscribe(\r\n            data => {\r\n                this.spinner.hide()\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXJzL2dyb3VwL2VkaXQvZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserGroupService } from 'src/app/sdk/user/services';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FormBuilderTypeSafe, FormGroupTypeSafe } from 'src/app/services/angular-reactive-forms-helper';\r\nimport { PesanService } from 'src/app/services/tool/pesan.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Group } from 'src/app/sdk/user/models';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.scss']\r\n})\r\nexport class EditComponent implements OnInit {\r\n\r\n    constructor(\r\n\r\n        private userGroupService: UserGroupService,\r\n        private spinner: NgxSpinnerService,\r\n        private fb: FormBuilderTypeSafe,\r\n        private pesan: PesanService,\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute,\r\n\r\n    ) { }\r\n\r\n    dataGroup: Group = {}\r\n    id_group: string = ''\r\n\r\n    ngOnInit() {\r\n        this.id_group = this.activatedRoute.snapshot.paramMap.get('id_group')\r\n        this.form()\r\n        this.getData()\r\n    }\r\n\r\n    getData() {\r\n        this.userGroupService.getUserGroupsId(this.id_group).subscribe(\r\n            data=> {\r\n                this.dataForm.setValue(data.data)\r\n            }\r\n        )\r\n    }\r\n\r\n    dataForm: FormGroupTypeSafe<Group>\r\n    form() {\r\n        this.dataForm = this.fb.group<Group>({\r\n            name: new FormControl('', [Validators.required]),\r\n            status_group: new FormControl('',[Validators.required]),\r\n            description: new FormControl(''),\r\n            created_at: new FormControl(''),\r\n            id_group: new FormControl(''),\r\n            updated_at: new FormControl(''),\r\n\r\n        })\r\n    }\r\n\r\n    simpan() {\r\n        this.spinner.show()\r\n        if (this.dataForm.invalid) {\r\n            this.pesan.pesanWarningForm('Form Tidak Valid')\r\n            this.spinner.hide()\r\n            return\r\n        }\r\n\r\n        this.dataGroup = this.dataForm.value\r\n        this.userGroupService\r\n            .putUserGroupsId({id: this.id_group, body: this.dataGroup})\r\n            .subscribe(\r\n                data => {\r\n\r\n                    this.goToBack()\r\n                    this.spinner.hide()\r\n                },\r\n                err => {\r\n                    this.pesan.pesanWarningForm('Gagal di simpan')\r\n                    this.spinner.hide()\r\n                },\r\n                () => {\r\n                    console.log('HTTP request completed.')\r\n                },\r\n            )\r\n    }\r\n\r\n\r\n\r\n    goToBack() {\r\n\r\n        this.router.navigate(['users/group/list'])\r\n    }\r\n\r\n}\r\n","import { DetailComponent } from './detail/detail.component';\r\nimport { AddComponent } from './add/add.component';\r\nimport { EditComponent } from './edit/edit.component';\r\nimport { ListComponent } from './list/list.component';\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        redirectTo: 'list'\r\n    },\r\n    {\r\n        path: 'list',\r\n        component: ListComponent\r\n    },\r\n    {\r\n        path: 'edit/:id_group',\r\n        component: EditComponent\r\n    },\r\n    {\r\n        path: 'add',\r\n        component: AddComponent\r\n    },\r\n    {\r\n        path: 'detail/:id_group',\r\n        component: DetailComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class GroupRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { GroupRoutingModule } from './group-routing.module';\r\nimport { ListComponent } from './list/list.component';\r\nimport { AddComponent } from './add/add.component';\r\nimport { EditComponent } from './edit/edit.component';\r\nimport { DetailComponent } from './detail/detail.component';\r\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FormBuilderTypeSafe } from 'src/app/services/angular-reactive-forms-helper';\r\n\r\n\r\n@NgModule({\r\n    declarations: [ListComponent, AddComponent, EditComponent, DetailComponent],\r\n    imports: [\r\n        CommonModule,\r\n        GroupRoutingModule,\r\n        NgZorroAntdModule,\r\n        ReactiveFormsModule,\r\n        FormsModule\r\n    ],\r\n    providers: [\r\n        FormBuilderTypeSafe\r\n    ]\r\n})\r\nexport class GroupModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXJzL2dyb3VwL2xpc3QvbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserGroupService } from 'src/app/sdk/user/services';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    selector: 'app-list',\r\n    templateUrl: './list.component.html',\r\n    styleUrls: ['./list.component.scss']\r\n})\r\nexport class ListComponent implements OnInit {\r\n\r\n    constructor(\r\n        private userGroupService: UserGroupService,\r\n        private spinner: NgxSpinnerService,\r\n        private nzMessageService: NzMessageService\r\n\r\n    ) { }\r\n\r\n    pageIndex = 1\r\n    pageSize = 10\r\n    total = 1\r\n    listOfData = []\r\n    loading = true\r\n    sortValue: string | null = null\r\n    sortKey: string | null = null\r\n    search: string = ''\r\n\r\n    ngOnInit() {\r\n        this.searchData()\r\n    }\r\n    sort(sort: { key: string; value: string }): void {\r\n        this.sortKey = sort.key\r\n        this.sortValue = sort.value\r\n        this.searchData()\r\n    }\r\n\r\n    searchData(reset: boolean = false): void {\r\n        if (reset) {\r\n            this.pageIndex = 1\r\n        }\r\n        this.loading = true\r\n        this.userGroupService\r\n            .getUserGroups(JSON.stringify({\r\n                pageIndex: this.pageIndex, pageSize: this.pageSize, sortKey: this.sortKey, sortValue: this.sortValue, search: this.search\r\n            }))\r\n            .subscribe((data: any) => {\r\n                this.loading = false\r\n                this.total = data.data.total\r\n                this.listOfData = data.data.data\r\n            })\r\n    }\r\n\r\n    updateFilter(value: string): void {\r\n        this.search = value\r\n        this.searchData(true)\r\n    }\r\n\r\n\r\n\r\n\r\n    delete(id) {\r\n        this.spinner.show()\r\n        this.userGroupService.deleteUserGroupsId(id).subscribe(\r\n            data => {\r\n                this.searchData()\r\n                this.spinner.hide()\r\n            }\r\n        )\r\n    }\r\n\r\n    batalDelete() {\r\n        this.nzMessageService.info('click cancel')\r\n    }\r\n\r\n}\r\n"],"sourceRoot":""}